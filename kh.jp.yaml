name: Kingdom Hearts (jp)
sha1: 9dabbf867a7ec2a030df99ba1ed969f2deef0488
options:
  basename: SLPS_251.05
  target_path: SLPS_251.05
  base_path: .
  compiler: GCC
  find_file_boundaries: False
  platform: ps2
  create_undefined_funcs_auto: True
  undefined_funcs_auto_path: undefined_funcs_auto.txt
  create_undefined_syms_auto: True
  undefined_syms_auto_path: undefined_syms_auto.txt
  symbol_addrs_path: symbol_addrs.txt
  asm_path: asm
  src_path: src
  build_path: build
  extensions_path: tools/splat_ext
  section_order: [".text", ".data", ".rodata", ".bss"]
  auto_all_sections: [".data", ".rodata", ".bss"]
  subalign: 8
  disasm_unknown: True
  named_regs_for_c_funcs: False
segments:
  - [0, databin, elf_header]
  - name: main
    type: code
    start: 0x80
    vram: 0x100000
    bss_size: 0x1E1500
    subsegments:
    - [0x80, asm, crt0]
    - [0x168, c, xbeginning]
    - [0x1260, c, xporcupine]
    - [0x18F0, asm]
    - [0x6258, c, xpancake]
    - [0x69C8, asm]
    - [0x9158, c, xarcade]
    - [0xA278, c, xnoodle]
    - [0xC358, asm]
    - [0xF450, c, xtailor]
    - [0x11120, c, xtrumpet]
    - [0x11FC0, c, worldfile]
    - [0x121E8, c, xblade] 
    - [0x14D58, asm] 
    - [0x1C4C0, c, xpaste]
    - [0x1C658, c, xturtle]
    - [0x1EB78, c, xgoblin]
    - [0x1FBE8, c, xkingdom]
    - [0x20AB8, c, xball]
    - [0x21A88, asm]
    - [0x21E60, c, xlamp]
    - [0x228A8, asm]
    - [0x3ABE8, c, xapple]
    - [0x3BE08, asm]
    - [0x49D68, c, xsquash]
    - [0x4A098, asm]
    ####################
    # Particle Effects #
    ####################
    - [0x80FF8, c, ppp/pppMngr]
    - [0x85220, c, ppp/pppDummy]
    - [0x85268, c, ppp/stdProg/pppGetRotMatrixXYZ] # seemingly linked separately from rest of stdProg
    # eiProg
    - [0x852F8, c, ppp/eiProg/pppDrawHook]
    - [0x85360, c, ppp/eiProg/pppPoint]
    - [0x85418, c, ppp/eiProg/pppMove]
    - [0x85510, c, ppp/eiProg/pppAccele]
    - [0x85608, c, ppp/eiProg/pppAngle]
    - [0x856B8, c, ppp/eiProg/pppAngMove]
    - [0x857A8, c, ppp/eiProg/pppAngAccele]
    - [0x85898, c, ppp/eiProg/pppScale]
    - [0x85950, c, ppp/eiProg/pppSclMove]
    - [0x85A48, c, ppp/eiProg/pppSclAccele]
    - [0x85B40, c, ppp/eiProg/pppColor]
    - [0x85C50, c, ppp/eiProg/pppColMove]
    - [0x85D68, c, ppp/eiProg/pppColAccele]
    - [0x85E80, c, ppp/eiProg/pppVertexAttend]
    - [0x85F90, c, ppp/eiProg/pppVertexAp]
    - [0x86330, c, ppp/eiProg/pppSegmentAp]
    - [0x86338, c, ppp/eiProg/pppFaceAp]
    - [0x86340, c, ppp/eiProg/pppVertexApLc]
    - [0x866A0, c, ppp/eiProg/pppVertexApAt]
    - [0x86918, c, ppp/eiProg/pppVtMime]
    - [0x86C18, c, ppp/eiProg/pppMatrixXYZ]
    - [0x86D18, c, ppp/eiProg/pppMatrixXZY]
    - [0x86E18, c, ppp/eiProg/pppMatrixYZX]
    - [0x86F18, c, ppp/eiProg/pppMatrixYXZ]
    - [0x87018, c, ppp/eiProg/pppMatrixZXY]
    - [0x87118, c, ppp/eiProg/pppMatrixZYX]
    - [0x87218, c, ppp/eiProg/pppMatrixLoc]
    - [0x87288, c, ppp/eiProg/pppMatrixScl]
    - [0x87330, c, ppp/eiProg/pppParMatrix]
    - [0x87360, c, ppp/eiProg/pppChrSclXYZMatrix]
    - [0x873F8, c, ppp/eiProg/pppChrSclXZMatrix]
    - [0x87470, c, ppp/eiProg/pppChrSclYMatrix]
    - [0x874E0, c, ppp/eiProg/pppChrYSclXYZMatrix]
    - [0x87560, c, ppp/eiProg/pppChrXSclXYZMatrix]
    - [0x875E0, c, ppp/eiProg/pppDrawMatrix]
    - [0x87610, c, ppp/eiProg/pppDrawMatrixFront]
    - [0x876B0, c, ppp/eiProg/pppDrawMatrixNoRot]
    - [0x877A0, c, ppp/eiProg/pppDrawMatrixWood]
    - [0x87850, c, ppp/eiProg/pppSMatrix]
    - [0x87870, c, ppp/eiProg/pppDrawMdl]
    - [0x879C8, c, ppp/eiProg/pppDrawMdlSemi]
    - [0x87B10, c, ppp/eiProg/pppDrawMdlTs]
    - [0x87DA8, c, ppp/eiProg/pppDrawShape]
    - [0x87FC8, c, ppp/eiProg/pppPObjPoint]
    - [0x88078, c, ppp/eiProg/pppPointAp]
    - [0x88190, c, ppp/eiProg/pppPointRAp]
    - [0x88400, c, ppp/eiProg/pppRandFloat]
    - [0x88550, c, ppp/eiProg/pppRandUpFloat]
    - [0x886A8, c, ppp/eiProg/pppRandDownFloat]
    - [0x88800, c, ppp/eiProg/pppRandChar]
    - [0x88968, c, ppp/eiProg/pppRandUpChar]
    - [0x88AD8, c, ppp/eiProg/pppRandDownChar]
    - [0x88C48, c, ppp/eiProg/pppRandShort]
    - [0x88DB0, c, ppp/eiProg/pppRandUpShort]
    - [0x88F20, c, ppp/eiProg/pppRandDownShort]
    - [0x89090, c, ppp/eiProg/pppRandInt]
    - [0x89250, c, ppp/eiProg/pppRandUpInt]
    - [0x893E8, c, ppp/eiProg/pppRandDownInt]
    - [0x89590, c, ppp/eiProg/pppRandFV]
    - [0x89738, c, ppp/eiProg/pppRandUpFV]
    - [0x898E8, c, ppp/eiProg/pppRandDownFV]
    - [0x89AB8, c, ppp/eiProg/pppRandIV]
    - [0x89C60, c, ppp/eiProg/pppRandUpIV]
    - [0x89E10, c, ppp/eiProg/pppRandDownIV]
    - [0x89FD8, c, ppp/eiProg/pppRandCV]
    - [0x8A1A8, c, ppp/eiProg/pppRandUpCV]
    - [0x8A380, c, ppp/eiProg/pppRandDownCV]
    - [0x8A560, c, ppp/eiProg/pppRandHCV]
    - [0x8A730, c, ppp/eiProg/pppRandUpHCV]
    - [0x8A908, c, ppp/eiProg/pppRandDownHCV]
    - [0x8AB60, c, ppp/eiProg/pppSRandFV]
    - [0x8AD38, c, ppp/eiProg/pppSRandUpFV]
    - [0x8AF10, c, ppp/eiProg/pppSRandDownFV]
    - [0x8B110, c, ppp/eiProg/pppSRandCV]
    - [0x8B320, c, ppp/eiProg/pppSRandUpCV]
    - [0x8B530, c, ppp/eiProg/pppSRandDownCV]
    - [0x8B740, c, ppp/eiProg/pppSRandHCV]
    - [0x8B950, c, ppp/eiProg/pppSRandUpHCV]
    - [0x8BB60, c, ppp/eiProg/pppSRandDownHCV]
    - [0x8BC98, c, ppp/eiProg/pppEiWindFun]
    - [0x8BE00, c, ppp/eiProg/pppEiWfacc]
    - [0x8C018, c, ppp/eiProg/pppDrawShapeField]
    - [0x8C030, c, ppp/eiProg/pppDrawMdlSea]
    - [0x8C048, c, ppp/eiProg/pppMoveLoop]
    - [0x8C160, c, ppp/eiProg/pppAngMoveLoop]
    - [0x8C278, c, ppp/eiProg/pppSclMoveLoop]
    - [0x8C390, c, ppp/eiProg/pppMatrixLoop]
    - [0x8C490, c, ppp/eiProg/pppPointLoop]
    - [0x8C5D8, c, ppp/eiProg/pppAngleLoop]
    - [0x8C720, c, ppp/eiProg/pppScaleLoop]
    - [0x8C868, c, ppp/eiProg/pppDrawMatrixLoop]
    - [0x8C898, c, ppp/eiProg/pppDrawMdlLoop]
    - [0x8CCD8, c, ppp/eiProg/pppDrawMdlLoopZ]
    - [0x8D148, c, ppp/eiProg/pppMatrixLoopXYZ]
    - [0x8D248, c, ppp/eiProg/pppMatrixLoopXZY]
    - [0x8D348, c, ppp/eiProg/pppMatrixLoopYXZ]
    - [0x8D448, c, ppp/eiProg/pppMatrixLoopYZX]
    - [0x8D548, c, ppp/eiProg/pppMatrixLoopZXY]
    - [0x8D648, c, ppp/eiProg/pppMatrixLoopZYX]
    # keProg
    - [0x8D748, c, ppp/keProg/pppKeTh]
    - [0x8DD98, c, ppp/keProg/pppKeThTp]
    - [0x8DEC8, c, ppp/keProg/pppKeThRes]
    - [0x8DEF8, c, ppp/keProg/pppKeThRes8]
    - [0x8DF28, c, ppp/keProg/pppKeThRes8x4]
    - [0x8DF58, c, ppp/keProg/pppKeThRes8x128]
    - [0x8DF88, c, ppp/keProg/pppKeThRes16]
    - [0x8DFB8, c, ppp/keProg/pppKeThRes16x4]
    - [0x8DFE8, c, ppp/keProg/pppKeThRes16x64]
    - [0x8E018, c, ppp/keProg/pppKeThRes24]
    - [0x8E048, c, ppp/keProg/pppKeThRes24x4]
    - [0x8E078, c, ppp/keProg/pppKeThRes32]
    - [0x8E0A8, c, ppp/keProg/pppKeThRes32x4]
    - [0x8E0D8, c, ppp/keProg/pppKeThRes32x32]
    - [0x8E108, c, ppp/keProg/pppKeThRes40]
    - [0x8E138, c, ppp/keProg/pppKeThRes40x4]
    - [0x8E168, c, ppp/keProg/pppKeThRes48]
    - [0x8E198, c, ppp/keProg/pppKeThRes48x4]
    - [0x8E1C8, c, ppp/keProg/pppKeThRes64]
    - [0x8E1F8, c, ppp/keProg/pppKeThRes64x4]
    - [0x8E228, c, ppp/keProg/pppKeThRes64x16]
    - [0x8E258, c, ppp/keProg/pppKeThRes128]
    - [0x8E288, c, ppp/keProg/pppKeThRes128x4]
    - [0x8E2B8, c, ppp/keProg/pppKeThRes128x8]
    - [0x8E2E8, c, ppp/keProg/pppKeThRes255]
    - [0x8E318, c, ppp/keProg/pppKeThRes255x4]
    - [0x8E348, c, ppp/keProg/pppKeThHitBorn]
    - [0x8E560, c, ppp/keProg/pppKeThSft]
    - [0x8E8A8, c, ppp/keProg/pppKeBornRnd]
    - [0x8ED58, c, ppp/keProg/pppKeBornRnd2]
    - [0x8EF80, c, ppp/keProg/pppKeBornRnd3]
    - [0x8F1E0, c, ppp/keProg/pppKeBornRnd4]
    - [0x8F708, c, ppp/keProg/pppKeBornRnd5]
    - [0x8FB38, c, ppp/keProg/pppKeBornRnd6]
    - [0x8FE20, c, ppp/keProg/pppKeBornPtCmpl]
    - [0x90038, c, ppp/keProg/pppKeMvYpEff]
    - [0x901A8, c, ppp/keProg/pppKeMdlTfd]
    - [0x903C8, c, ppp/keProg/pppKeMdlTfdUv]
    - [0x90698, c, ppp/keProg/pppKeMdlTfd2]
    - [0x908B8, c, ppp/keProg/pppKeMdlTfdUv2]
    - [0x90B88, c, ppp/keProg/pppKeMdlDtt]
    - [0x915F8, c, ppp/keProg/pppKeMdlBmp]
    - [0x91610, c, ppp/keProg/pppKeAcmSolid]
    - [0x91618, c, ppp/keProg/pppKeShpTail]
    - [0x91F68, c, ppp/keProg/pppKeShpTail2]
    - [0x92830, c, ppp/keProg/pppKeShpTail3]
    - [0x934D0, c, ppp/keProg/pppKeShpTailPht]
    - [0x934F0, c, ppp/keProg/pppKeShpTailLc]
    - [0x93530, c, ppp/keProg/pppKeShpDtt]
    - [0x93870, c, ppp/keProg/pppKeLnsLp]
    - [0x93A78, c, ppp/keProg/pppKeLnsArnd]
    - [0x93D00, c, ppp/keProg/pppKeLnsClm]
    - [0x93F90, c, ppp/keProg/pppKeLnsCrn]
    - [0x941F0, c, ppp/keProg/pppKeLnsFls]
    - [0x94890, c, ppp/keProg/pppKeLnsLpT]
    - [0x94A50, c, ppp/keProg/pppKeLnsArndT]
    - [0x94CA8, c, ppp/keProg/pppKeLnsClmT]
    - [0x94FA0, c, ppp/keProg/pppKeLnsCrnT]
    - [0x95258, c, ppp/keProg/pppKeLnsFlsT]
    - [0x95478, c, ppp/keProg/pppKeLnsLpSft]
    - [0x95558, c, ppp/keProg/pppKeHmgEff]
    - [0x95760, c, ppp/keProg/pppKeGrvTgt]
    - [0x957C8, c, ppp/keProg/pppKeGrvEff]
    - [0x95950, c, ppp/keProg/pppKeHitBall]
    - [0x959A0, c, ppp/keProg/pppKeHitBorn]
    - [0x95B18, c, ppp/keProg/pppKeHitChkPxB]
    - [0x95D68, c, ppp/keProg/pppKeDrct]
    - [0x95DC8, c, ppp/keProg/pppKeMatSN]
    - [0x95EA0, c, ppp/keProg/pppKeParMatR]
    - [0x95F40, c, ppp/keProg/pppKeTkFade]
    - [0x96418, c, ppp/keProg/pppKeDMat]
    - [0x96490, c, ppp/keProg/pppKeDMatFr]
    - [0x96558, c, ppp/keProg/pppKeMatPht]
    - [0x96688, c, ppp/keProg/pppKeDMatPht]
    - [0x96748, c, ppp/keProg/pppKeDMatPhtFr]
    - [0x96848, c, ppp/keProg/pppDrawMdl2]
    - [0x969F0, c, ppp/keProg/pppDrawMdlSemi2]
    - [0x96B88, c, ppp/keProg/pppDrawMdlTs2]
    - [0x96E68, c, ppp/keProg/pppKeZCrct]
    - [0x97078, c, ppp/keProg/pppKeZCrctShp]
    - [0x972A0, c, ppp/keProg/pppDrawMdl3]
    - [0x974F8, c, ppp/keProg/pppDrawMdlSemi3]
    - [0x97740, c, ppp/keProg/pppDrawMdlTs3]
    - [0x97AE0, c, ppp/keProg/pppKeMdlTfd3]
    - [0x97D28, c, ppp/keProg/pppKeMdlTfdUv3]
    - [0x98020, c, ppp/keProg/pppDrawShapeX]
    - [0x98288, c, ppp/keProg/pppKeShpTailX]
    - [0x98C08, c, ppp/keProg/pppKeShpTail2X]
    - [0x99518, c, ppp/keProg/pppKeShpTail3X]
    # ryjProg
    - [0x9A1F8, c, ppp/ryjProg/pppRyjDrawMatrixWorld]
    - [0x9A298, c, ppp/ryjProg/pppRyjDrawMatrixWorldFront]
    - [0x9A3B8, c, ppp/ryjProg/pppRyjDrawMatrixWorldNoRot]
    - [0x9A520, c, ppp/ryjProg/pppRyjDrawMatrixWorldWood]
    - [0x9A740, c, ppp/ryjProg/pppRyjMatrixWorldXYZ]
    - [0x9A910, c, ppp/ryjProg/pppRyjMatrixWorldXZY]
    - [0x9AAE0, c, ppp/ryjProg/pppRyjMatrixWorldYXZ]
    - [0x9ACB0, c, ppp/ryjProg/pppRyjMatrixWorldYZX]
    - [0x9AE80, c, ppp/ryjProg/pppRyjMatrixWorldZXY]
    - [0x9B050, c, ppp/ryjProg/pppRyjMatrixWorldZYX]
    - [0x9B220, c, ppp/ryjProg/pppRyjMatrixNoRot]
    - [0x9BF48, c, ppp/ryjProg/pppRyjDrawShipoly]
    - [0x9D178, c, ppp/ryjProg/pppRyjDrawShipolyBone]
    - [0x9EB38, c, ppp/ryjProg/pppRyjMegaBirth]
    - [0x9F6D0, c, ppp/ryjProg/pppRyjMngFlag]
    - [0x9F9D0, c, ppp/ryjProg/pppRyjMegaBirthPrize]
    - [0xA00C0, c, ppp/ryjProg/pppRyjMegaPlace]
    - [0xA0D48, c, ppp/ryjProg/pppRyjMegaPlaceShape]
    - [0xA0DD0, c, ppp/ryjProg/pppRyjMegaPlaceModel]
    - [0xA0E58, c, ppp/ryjProg/pppRyjMegaPlaceLamp]
    - [0xA25C0, c, ppp/ryjProg/pppRyjMegaBirthModel]
    - [0xA30F0, c, ppp/ryjProg/pppRyjDrawKekoto]
    - [0xA3C40, c, ppp/ryjProg/pppRyjLight]
    - [0xA3E28, c, ppp/ryjProg/pppRyjDrawMatrixWorldDtt]
    - [0xA3EE8, c, ppp/ryjProg/pppRyjDrawMatrixWorldDttFr]
    - [0xA4E38, c, ppp/ryjProg/pppRyjMegaBirthFilter]
    - [0xA6870, c, ppp/ryjProg/pppRyjMegaBirthModelFilter]
    # stdProg
    - [0xA7078, c, ppp/stdProg/pppGetRotMatrixX]
    - [0xA70F8, c, ppp/stdProg/pppGetRotMatrixY]
    - [0xA7178, c, ppp/stdProg/pppGetRotMatrixZ]
    - [0xA71F8, c, ppp/stdProg/pppGetRotMatrixXZY]
    - [0xA7288, c, ppp/stdProg/pppGetRotMatrixYZX]
    - [0xA7318, c, ppp/stdProg/pppGetRotMatrixYXZ]
    - [0xA73A8, c, ppp/stdProg/pppGetRotMatrixZXY]
    - [0xA7438, c, ppp/stdProg/pppGetRotMatrixZYX]
    # draw
    # todo: sort/divide/rename xberry and xpear, they belong to ppp/draw
    - [0xA74C8, c, ppp/xberry]
    - [0xA8828, c, ppp/xpear]
    - [0xA9300, c, ppp/draw/draw]
    - [0xACA20, c, ppp/draw/global]
    - [0xACFF8, c, ppp/draw/md]
    - [0xAD208, c, ppp/draw/md0] #todo: split into smaller subsegments by function

    - [0xBBD58, c, gumi]
    - [0xBD138, asm]
    - [0xC3728, c, xflamingo]
    - [0xC5E08, asm]
    - [0xC84F0, c, xhumungus]
    - [0xDEEF8, c, xstuck]
    - [0xDF218, asm]
    - [0xED8F8, c, xquack]
    - [0xEED88, asm]
    - [0xEF290, c, xtango]
    - [0xF0CB0, c, xbiscuit]
    - [0xF3A10, c, xmeowp]
    - [0xF4910, asm]
    - [0x115B08, c, xpotato]
    - [0x119868, c, xrodent]
    - [0x11A450, asm]
    - [0x12F5F8, c, xcursed]
    - [0x12F888, asm]
    - [0x130558, c, memcard]
    - [0x1330F8, asm]
    - [0x144510, c, xcapy]
    - [0x144CB8, asm]
    - [0x146BD0, c, xmonitor]
    - [0x1477F8, asm]
    - [0x14A090, c, disk]
###########
# Library #
###########
    # ??? - the following 3 have 0x10 file alignment and 0x4 (no) function alignment within files
    - [0x14AB28, asm]
    - [0x14B880, asm]
    - [0x14BA00, asm]
    # libc.a
    - [0x14BD50, asm, libc/assert]
    - [0x14BD88, asm, libc/bsearch]
    - [0x14BE58, asm, libc/exit]
    - [0x14BF08, asm, libc/fiprintf]
    - [0x14BF60, asm, libc/malloc]
    - [0x14C000, asm, libc/malloc_r]
    - [0x14C980, asm, libc/memcmp]
    # - [0x14CA14, asm, libc/memcpy]
    # - [0x14CAC4, asm, libc/memset]
    - [0x14CB88, asm, libc/mloc]
    - [0x14CC58, asm, libc/printf]
    - [0x14CD28, asm, libc/puts]
    - [0x14CDD0, asm, libc/qsort]
    - [0x14D7C0, asm, libc/rand]
    - [0x14D840, asm, libc/sbrkr]
    - [0x14D898, asm, libc/sprintf]
    - [0x14D9B0, asm, libc/strcat]
    # - [0x14DADC, asm, libc/strcmp]
    - [0x14DC20, asm, libc/strcpy]
    # - [0x14DD34, asm, libc/strlen]
    - [0x14DE70, asm, libc/strncmp]
    - [0x14E028, asm, libc/vfiprintf]
    - [0x14ED98, asm, libc/vfprintf]
    - [0x150810, asm, libc/vsprintf]
    - [0x1508C0, asm, libc/wsetup]
    - [0x1509D0, asm, libc/abort]
    - [0x1509E8, asm, libc/dtoa]
    - [0x151E80, asm, libc/fflush]
    - [0x151F98, asm, libc/findfp]
    - [0x152238, asm, libc/freer]
    - [0x1526A0, asm, libc/fvwrite]
    - [0x152A80, asm, libc/fwalk]
    - [0x152B18, asm, libc/locale]
    - [0x152C00, asm, libc/makebuf]
    - [0x152D58, asm, libc/mbtowc_r]
    # - [0x152D8C, asm, libc/memchr]
    # - [0x152E6C, asm, libc/memmove]
    - [0x152F70, asm, libc/mprec]
    - [0x153F88, asm, libc/s_isinf]
    - [0x153FD0, asm, libc/s_isnan]
    - [0x154010, asm, libc/signal]
    - [0x1542F8, asm, libc/signalr]
    - [0x154370, asm, libc/stdio]
    - [0x1544E0, asm, libc/writer]
    - [0x154540, asm, libc/callocr]
    - [0x1545F8, asm, libc/closer]
    - [0x154650, asm, libc/fstatr]
    - [0x1546B0, asm, libc/lseekr]
    - [0x154710, asm, libc/readr]
    # libkernl.a
    - [0x154780, asm, libkernl/klib]
    - [0x155020, asm, libkernl/glue]
    - [0x1553F0, asm, libkernl/cache]
    - [0x155670, asm, libkernl/intr]
    - [0x1558A0, asm, libkernl/alarm]
    - [0x1559E0, asm, libkernl/tty]
    - [0x155F00, asm, libkernl/kprintf]
    - [0x156878, asm, libkernl/sifrpc]
    - [0x1577D8, c, lib/libkernl/filestub]
    - [0x15AE70, asm, libkernl/eeloadfile]
    - [0x15BBD0, asm, libkernl/iopreset]
    - [0x15BE80, asm, libkernl/diei]
    - [0x15BEE0, c, lib/libkernl/initsys]
    - [0x15C020, asm, libkernl/libosd]
    - [0x15C2B0, asm, libkernl/thread]
    - [0x15C610, asm, libkernl/deci2]
    - [0x15C7F0, asm, libkernl/sifcmd]
    - [0x15CF38, asm, libkernl/tlbfunc]
    - [0x15D440, asm, libkernl/tlbtrap]
    # libgcc.a
    - [0x15D7A0, asm, libgcc/_muldi3]
    - [0x15D818, asm, libgcc/_divdi3]
    - [0x15DEB0, asm, libgcc/_moddi3]
    - [0x15E540, asm, libgcc/_udivdi3]
    - [0x15EAC0, asm, libgcc/_umoddi3]
    - [0x15F028, asm, libgcc/_fixunsdfdi]
    - [0x15F140, asm, libgcc/_fixunssfdi]
    - [0x15F268, asm, libgcc/main]
    - [0x15F3F0, asm, libgcc/_sf_to_df]
    - [0x15F430, asm, libgcc/_addsub_df]
    - [0x15F750, asm, libgcc/_mul_df]
    - [0x15FA00, asm, libgcc/_div_df]
    - [0x15FB78, asm, libgcc/_compare_df]
    - [0x15FBC8, asm, libgcc/_si_to_df]
    - [0x15FC80, asm, libgcc/_df_to_si]
    - [0x15FD20, asm, libgcc/_make_df]
    - [0x15FD50, asm, libgcc/_df_to_sf]
    - [0x15FDA0, asm, libgcc/_df_to_usi]
    - [0x15FE48, asm, libgcc/frame-dwarf2]
    - [0x1613B8, asm, libgcc/_floatdidf]
    - [0x161460, asm, libgcc/_unpack_sf]
    - [0x1614C0, asm, libgcc/_make_sf]
    - [0x1614F0, asm, libgcc/_pack_df]
    - [0x161608, asm, libgcc/_unpack_df]
    - [0x1616B8, asm, libgcc/_fpcmp_parts_df]
    - [0x1617D8, asm, libgcc/_pack_sf]
    - [0x1618A8, asm, libgcc/atexit]
    - [0x161948, asm, libgcc/errno]
    - [0x161958, asm, libgcc/strncpy]
    # libgraph.a
    - [0x161B18, asm, libgraph/graph001]
    - [0x161CB8, asm, libgraph/graph002]
    - [0x161D20, asm, libgraph/graph003]
    - [0x161F90, asm, libgraph/graph004]
    - [0x162050, asm, libgraph/graph008]
    - [0x162138, asm, libgraph/graph011]
    - [0x1621D0, asm, libgraph/graph012]
    - [0x1624E8, asm, libgraph/graph015]
    - [0x1626D0, asm, libgraph/graph016]
    - [0x162810, asm, libgraph/graph017]
    - [0x162990, asm, libgraph/graph018]
    - [0x163020, asm, libgraph/graph019]
    - [0x1630C0, asm, libdma]
    - [0x163B90, asm, libuv0]
    - [0x1648D8, asm, libdbc]
    - [0x165338, asm, libpad2]
    - [0x165B90, asm, libvib]
    # libcdvd.a
    - [0x165D00, asm, libcdvd/cdvd000]
    - [0x167018, asm, libcdvd/cdvd005]
    - [0x1671F8, asm, libcdvd/cdvd010]
    - [0x1672C8, asm, libcdvd/cdvd015]
    - [0x167360, asm, libcdvd/cdvd017]
    - [0x167418, asm, libcdvd/cdvd018]
    - [0x1674D0, asm, libcdvd/cdvd035]
    # libm.a
    - [0x167588, asm, libm/s_atan]
    - [0x167A50, asm, libm/s_ceil]
    - [0x167C60, asm, libm/s_cos]
    - [0x167D88, asm, libm/s_fabs]
    - [0x167DC0, asm, libm/s_nan]
    - [0x167DE8, asm, libm/s_sin]
    - [0x167F20, asm, libm/sf_cos]
    - [0x167FF8, asm, libm/sf_sin]
    - [0x1680E0, asm, libm/sf_tan]
    - [0x168158, asm, libm/w_asin]
    - [0x168170, asm, libm/w_atan2]
    - [0x168188, asm, libm/w_sqrt]
    - [0x1681A0, asm, libm/wf_acos]
    - [0x1681B8, asm, libm/wf_asin]
    - [0x1681D0, asm, libm/wf_atan2]
    - [0x1681E8, asm, libm/wf_fmod]
    - [0x168200, asm, libm/wf_pow]
    - [0x168218, asm, libm/wf_sqrt]
    - [0x168230, asm, libm/e_asin]
    - [0x168888, asm, libm/e_atan2]
    - [0x168BC8, asm, libm/e_rem_pio2]
    - [0x169180, asm, libm/e_sqrt]
    - [0x1694A0, asm, libm/ef_acos]
    - [0x1698E0, asm, libm/ef_asin]
    - [0x169C98, asm, libm/ef_atan2]
    - [0x169E80, asm, libm/ef_fmod]
    - [0x16A050, asm, libm/ef_pow]
    - [0x16A870, asm, libm/ef_rem_pio2]
    - [0x16AC38, asm, libm/ef_sqrt]
    - [0x16AD10, asm, libm/k_cos]
    - [0x16AFE8, asm, libm/k_rem_pio2]
    - [0x16BB38, asm, libm/k_sin]
    - [0x16BD70, asm, libm/kf_cos]
    - [0x16BEE0, asm, libm/kf_rem_pio2]
    - [0x16C788, asm, libm/kf_sin]
    - [0x16C8B0, asm, libm/kf_tan]
    - [0x16CB58, asm, libm/s_floor]
    - [0x16CD70, asm, libm/s_scalbn]
    - [0x16CF58, asm, libm/sf_atan]
    - [0x16D1F8, asm, libm/sf_fabs]
    - [0x16D220, asm, libm/sf_floor]
    - [0x16D310, asm, libm/sf_scalbn]
    - [0x16D3D8, asm, libm/s_copysign]
    - [0x16D420, asm, libm/sf_copysign]
    - [0x16D460, asm, libpc]
    - [0x16D4E8, c, lib/libmc]
    # libipu.a
    - [0x16ED50, asm, libipu/libipu]
    - [0x16F0C0, asm, libipu/ipuinit]

    - [0x16F360, data]
    - [0x1B3AA0, .data, xnoodle]
    - [0x1B7B90, data]
    - [0x1B91F8, .data, worldfile]
    - [0x1B9370, data]
    - [0x201090, .data, xapple]
    - [0x2010F8, data] # todo: xapple owns D_00301078
    - [0x25EC80, data, ppp/pppMngr]
    - [0x260C80, data]
    - [0x2DE638, data, xquack]
    - [0x2DE670, data]
    - [0x31F948, .data, memcard]
    - [0x31FA50, data]
    - [0x361178, .data, xcapy]
    - [0x361180, data]
    - [0x364368, .data, disk]
    - [0x364408, data]
    - [0x364430, data, libc/impure]
    - [0x364728, data, libc/malloc_r]
    - [0x364B80, data, libc/mlock]
    - [0x364B88, data, libc/locale]
    # - [0x364B8C, data, libkernl/klib]
    # - [0x364B9C, data, libkernl/glue]
    - [0x364BA8, data, libkernl/alarm]
    - [0x365350, data, libkernl/kprintf]
    - [0x365358, data, libkernl/sifrpc]
    - [0x365360, .data, lib/libkernl/filestub]
    # - [0x3653F4, data, libkernl/eeloadfile]
    - [0x365400, .data, lib/libkernl/initsys]
    - [0x365418, data, libkernl/libosd]
    - [0x365BD8, data, libkernl/thread]
    # - [0x365BDC, data, libkernl/sifcmd]
    - [0x365BE0, data, libkernl/tlbfunc]
    # - [0x36621C, data, libgcc/__main]
    - [0x366230, data, libgraph/graph001]
    - [0x366250, data, libgraph/graph002]
    - [0x366270, data, libgraph/graph018]
    - [0x366280, data, libdma/libdma]
    - [0x366330, data, libvu0]
    - [0x366360, data, libdbc]
    - [0x366370, data, libdpad2]
    - [0x3663A0, data, libdvib]
    - [0x3663C0, data, libcdvd/cdvd000]
    - [0x367E30, data, libpc]
    - [0x367E40, data, lib/libmc]
    - [0x367E60, data, libipu]
    - [0x367EE0, data]

    - [0x3869D0, .rodata, xbeginning]
    - [0x3869F0, .rodata, xporcupine]
    - [0x386A00, rodata, 18F0]
    # - [0x386A60, .rodata, xarcade]
    - [0x386AE0, .rodata, xnoodle]
    - [0x386B10, rodata, 69C8]
    - [0x386D20, .rodata, worldfile]
    - [0x386DB8, .rodata, xblade]
    - [0x386E40, rodata, 14D58]
    - [0x386EC0, .rodata, xturtle]
    - [0x386F70, .rodata, xgoblin]
    - [0x386FF0, .rodata, xkingdom]
    - [0x387080, rodata, 228A8]
    - [0x3879E8, .rodata, xapple]
    - [0x387A58, rodata, blob3] # todo: part of xapple
    - [0x387A60, rodata, 3BE08]
    - [0x3881C0, rodata, 4A098]
    - [0x389BC0, rodata, DF218]
    # - [0x38A610, .rodata, xbiscuit] # todo: switch tables
    - [0x38A6F0, .rodata, xmeowp]
    - [0x38A720, rodata, F4910]
    - [0x38AB30, .rodata, xrodent]
    - [0x38AB50, rodata, 11A450]
    - [0x38AF00, .rodata, xcursed]
    - [0x38AF40, rodata, 12F888]
    - [0x38AFB0, .rodata, memcard]
    - [0x38B070, rodata, 1330F8]
    - [0x38B3C8, .rodata, xcapy]
    - [0x38B410, rodata, 144CB8]
    - [0x38B450, .rodata, xmonitor]
    - [0x38B468, rodata, 1477F8]
    - [0x38B518, .rodata, disk]
    - [0x38B598, rodata, libc/assert]
    - [0x38B5C8, rodata, libc/ctype_]
    - [0x38B6D0, rodata, libc/impure]
    - [0x38B6D8, rodata, libc/puts]
    - [0x38B6E0, rodata, libc/vfiprintf]
    - [0x38B8D0, rodata, libc/vfprintf]
    - [0x38BAE0, rodata, libc/dtoa]
    - [0x38BB38, rodata, libc/locale]
    - [0x38BB80, rodata, libc/mprec]
    - [0x38BCA8, rodata, libkernl/tty]
    - [0x38BD20, rodata, libkernl/kprintf]
    - [0x38BE80, .rodata, lib/libkernl/filestub]
    - [0x38BEF8, rodata, libkernl/eeloadfile]
    - [0x38BF00, rodata, libkernl/iopreset]
    - [0x38BF30, rodata, libkernl/thread]
    - [0x38BF58, rodata, libkernl/tlbfunc]
    - [0x38BFD8, rodata, libgcc/_divdi3]
    - [0x38C0D8, rodata, libgcc/_moddi3]
    - [0x38C1D8, rodata, libgcc/_udivdi3]
    - [0x38C2D8, rodata, libgcc/_umoddi3]
    - [0x38C3D8, rodata, libgcc/_thenan_df]
    - [0x38C3F0, rodata, libgcc/frame-dwarf2]
    - [0x38C4C0, rodata, libgraph/graph003]
    - [0x38C4F8, rodata, libgraph/graph008]
    - [0x38C528, rodata, libgraph/graph012]
    - [0x38C6C0, rodata, libgraph/graph015]
    - [0x38C7E0, rodata, libgraph/graph017]
    - [0x38C820, rodata, libgraph/graph018]
    - [0x38CA20, rodata, libdbc]
    - [0x38CC18, rodata, libcdvd/cdvd000]
    - [0x38CDC8, rodata, libcdvd/cdvd005]
    - [0x38CDF0, rodata, libcdvd/cdvd017]
    - [0x38CE00, rodata, libm/s_atan]
    - [0x38CEB0, rodata, libm/s_ceil]
    - [0x38CEC0, rodata, libm/sf_cos]
    - [0x38CEC8, rodata, libm/e_asin]
    - [0x38D018, rodata, libm/e_atan2]
    - [0x38D0C8, rodata, libm/e_rem_pio2]
    - [0x38D318, rodata, libm/e_sqrt]
    - [0x38D328, rodata, libm/ef_acos]
    - [0x38D360, rodata, libm/ef_asin]
    # - [0x38D39C, rodata, libm/ef_atan2]
    - [0x38D3B8, rodata, libm/ef_fmod]
    - [0x38D3C8, rodata, libm/ef_pow]
    - [0x38D450, rodata, libm/ef_rem_pio2]
    - [0x38D810, rodata, libm/ef_sqrt]
    - [0x38D818, rodata, libm/k_cos]
    - [0x38D880, rodata, libm/k_rem_pio2]
    - [0x38D8F0, rodata, libm/k_sin]
    - [0x38D960, rodata, libm/kf_cos]
    - [0x38D980, rodata, libm/kf_rem_pio2]
    # - [0x38D9CC, rodata, libm/kf_sin]
    - [0x38D9E8, rodata, libm/kf_tan]
    - [0x38DA30, rodata, libm/s_floor]
    - [0x38DA40, rodata, libm/s_scalbn]
    - [0x38DA70, rodata, libm/sf_atan]
    # - [0x38DAC4, rodata, libm/sf_floor]
    - [0x38DAC8, rodata, libm/sf_scalbn]
    - [0x38DAD8, rodata, lib/libmc]
  - [0x38DB80, databin] # .reginfo / segment_1.2
  - [0x38DB98, databin]
  - [0x39A680]
